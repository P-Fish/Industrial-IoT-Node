
bin/Debug/mod2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000000fe  00000172  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000003b4  00000000  00000000  00000174  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000888  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000dc4  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00000e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  000013f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  0000199a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  000019b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 7d 00 	jmp	0xfa	; 0xfa <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define DDRB (*((volatile char *) 0x24))
#define PINB (*((volatile char *) 0x23))

void delay();

int main() {
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
    DDRB |= 0x2;
  88:	84 e2       	ldi	r24, 0x24	; 36
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	24 e2       	ldi	r18, 0x24	; 36
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	f9 01       	movw	r30, r18
  92:	20 81       	ld	r18, Z
  94:	22 60       	ori	r18, 0x02	; 2
  96:	fc 01       	movw	r30, r24
  98:	20 83       	st	Z, r18
    while (1) {
        PINB = 0x2;
  9a:	83 e2       	ldi	r24, 0x23	; 35
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	22 e0       	ldi	r18, 0x02	; 2
  a0:	fc 01       	movw	r30, r24
  a2:	20 83       	st	Z, r18
        delay();
  a4:	0e 94 55 00 	call	0xaa	; 0xaa <delay>
    }
  a8:	f8 cf       	rjmp	.-16     	; 0x9a <main+0x1a>

000000aa <delay>:
    return 0;
}

void delay() {
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	00 d0       	rcall	.+0      	; 0xb0 <delay+0x6>
  b0:	00 d0       	rcall	.+0      	; 0xb2 <delay+0x8>
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
    unsigned int i, j;
    for (i = 0; i < 2000; i++) {
  b6:	1a 82       	std	Y+2, r1	; 0x02
  b8:	19 82       	std	Y+1, r1	; 0x01
  ba:	12 c0       	rjmp	.+36     	; 0xe0 <delay+0x36>
        for (j = 0; j < 400; j++) {}
  bc:	1c 82       	std	Y+4, r1	; 0x04
  be:	1b 82       	std	Y+3, r1	; 0x03
  c0:	05 c0       	rjmp	.+10     	; 0xcc <delay+0x22>
  c2:	8b 81       	ldd	r24, Y+3	; 0x03
  c4:	9c 81       	ldd	r25, Y+4	; 0x04
  c6:	01 96       	adiw	r24, 0x01	; 1
  c8:	9c 83       	std	Y+4, r25	; 0x04
  ca:	8b 83       	std	Y+3, r24	; 0x03
  cc:	8b 81       	ldd	r24, Y+3	; 0x03
  ce:	9c 81       	ldd	r25, Y+4	; 0x04
  d0:	80 39       	cpi	r24, 0x90	; 144
  d2:	91 40       	sbci	r25, 0x01	; 1
  d4:	b0 f3       	brcs	.-20     	; 0xc2 <delay+0x18>
    return 0;
}

void delay() {
    unsigned int i, j;
    for (i = 0; i < 2000; i++) {
  d6:	89 81       	ldd	r24, Y+1	; 0x01
  d8:	9a 81       	ldd	r25, Y+2	; 0x02
  da:	01 96       	adiw	r24, 0x01	; 1
  dc:	9a 83       	std	Y+2, r25	; 0x02
  de:	89 83       	std	Y+1, r24	; 0x01
  e0:	89 81       	ldd	r24, Y+1	; 0x01
  e2:	9a 81       	ldd	r25, Y+2	; 0x02
  e4:	80 3d       	cpi	r24, 0xD0	; 208
  e6:	97 40       	sbci	r25, 0x07	; 7
  e8:	48 f3       	brcs	.-46     	; 0xbc <delay+0x12>
        for (j = 0; j < 400; j++) {}
    }
  ea:	00 00       	nop
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <_exit>:
  fa:	f8 94       	cli

000000fc <__stop_program>:
  fc:	ff cf       	rjmp	.-2      	; 0xfc <__stop_program>
